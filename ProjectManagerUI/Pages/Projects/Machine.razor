@page "/projects/machine/{MachineId:int}"
@inject IEmptyClass EmptyClass

<PageTitle>Projects - @EmptyClass.Location</PageTitle>
<ProjectNavigation emptyClass="@EmptyClass"></ProjectNavigation>

<!-- Info cards -->
<div class="row">
    <div class="col-lg-4 mb-3">
        <div class="card p-0 h-100" style="background-image: linear-gradient(180deg, rgba(25,55,80,1) 0%, rgba(50,110,129,1) 80%); color: rgb(250,250,250); ">
            <div class="card-header">
                Info card
            </div>
            <div class="card-body">
                <h6>Info header</h6>
                <p class="card-text">Informaton text here</p>
                <p class="card-text">Informaton text here</p>
            </div>
        </div>
    </div>
    <div class="col-lg-4 mb-3">
        <div class="card p-0 h-100" style="background-image: linear-gradient(180deg, rgba(25,55,80,1) 0%, rgba(50,110,129,1) 80%); color: rgb(250,250,250); ">
            <div class="card-header">
                Info card
            </div>
            <div class="card-body">
                <h6>Info header</h6>
                <p class="card-text">Informaton text here</p>
                <p class="card-text">Informaton text here</p>
            </div>
        </div>
    </div>
    <div class="col-lg-4 mb-3">
        <div class="card p-0 h-100" style="background-image: linear-gradient(180deg, rgba(25,55,80,1) 0%, rgba(50,110,129,1) 80%); color: rgb(250,250,250); ">
            <div class="card-header">
                Info card
            </div>
            <div class="card-body">
                <h6>Info header</h6>
                <p class="card-text">Informaton text here</p>
                <p class="card-text">Informaton text here</p>
            </div>
        </div>
    </div>
</div>
<!-- Child relation cards -->
<div class="row row-cols-1 row-cols-sm-2 row-cols-md-2 row-cols-lg-3 row-cols-xl-4 row-cols-xxl-5 g-4">
    @foreach (RelationModel childRelation in ChildRelations)
    {
        <PartCard OnClickCallback="ClickCard" CardId="@childRelation.Id" CardName="@childRelation.Relation_name" CardText="Some machine descriptive text here" FooterText="..."></PartCard>
    }
</div>
<!--  Edit menu -->
<div class="dropup" style=" position: absolute; right: 20px; bottom: 20px;">
    <button type="button" class="btn btn-primary dropdown p-1" data-bs-toggle="dropdown">
        <span class="oi oi-plus p-1" aria-hidden="true"></span>
    </button>
    <ul class="dropdown-menu">
        <li><button type="button" data-bs-toggle="modal" data-bs-target="#addChildModal" class="dropdown-item">Add</button></li>
        <li><button type="button" data-bs-toggle="modal" data-bs-target="#editRelationModal" class="dropdown-item">Edit</button></li>
    </ul>
</div>
<!-- Modals -->
<AddChildModal ParentId="@MachineId" RoleId="8" OnSubmitCallback="@SubmitAddPart"></AddChildModal>
<EditRelationModal UpdatedRelation="@machine" ParentId="machine.Parent_id" OnSubmitCallback="@SubmitUpdateMachine"></EditRelationModal>
<DeleteChildModal ClickedCardId="@ClickedCardId" OnSubmitCallback="@SubmitDeletePart"></DeleteChildModal>
@code {
    #region PageBase
    [Parameter]
    public int MachineId { get; set; }
    public int? ClickedCardId { get; set; }
    public RelationModel machine = new();
    public List<RelationModel> ChildRelations = new();
    protected override async Task OnInitializedAsync()
    {
        GetRelationWithId();
        await GetChildRelations();
        EmptyClass.SetMachine(machine.Relation_name, MachineId);
    }
    //Get relation
    private void GetRelationWithId()
    {
        machine = RelationDataAccess.GetRelation(MachineId);
    }
    //Get all child relations
    private async Task GetChildRelations()
    {
        ChildRelations = await RelationDataAccess.GetChildRelations(MachineId);
    }
    protected void ClickCard(int? id)
    {
        ClickedCardId = id;
    }
    #endregion
    #region FeatureCreateNewPart
    private async Task SubmitAddPart()
    {
        await GetChildRelations();
    }
    #endregion
    #region FeatureDeletePart
    private async Task SubmitDeletePart()
    {
        await GetChildRelations();
    }
    #endregion
    #region FeatureUpdateMachine
    private void SubmitUpdateMachine()
    {
    }
    #endregion
}